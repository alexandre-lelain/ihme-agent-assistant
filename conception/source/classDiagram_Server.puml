@startuml

class RestServer {
    +DialogManager dm
    +handleRequest(HttpRequest req): HttpResponse
}
class DialogManager {
    +createDialog(): int
    +sayInDialog(int id, String text): String
    +confirmAction(int id): Action
    +invalidateAction(int id): String 
}
abstract class FormDialog <<Resource>> {
    +{static} int nextid
    +int id
    +List<FormField> form
    +addStep(String text): void
    +{abstract} generateAction(): Action
    +answer(): String
    -isFilled(): boolean
}
class FormField {
    +TokenType type
    +String name
    +String value
    +fill(Token token): void
    +isEmpty(): boolean
}
class AlarmFormDialog {
    +generateAction(): AlarmAction
}
abstract class Action
class AlarmAction
class Tokenizer <<(S, orange) Singleton>> {
    +tokenize(String text): List<Token>
}
class Token {
    +TokenType type
    +String value
}
enum TokenType

hide TokenType methods

RestServer "1" *-- "1" DialogManager
DialogManager "1" *-- "*" FormDialog : maintains >
FormDialog "*" -left-> "1" Tokenizer : uses
FormDialog "1" *-- "1..*" FormField : must fill >
Tokenizer "1" --> "*" Token : establishes
FormDialog "1" --> "*" Token : filled\nwith
Token "1" o- "1" TokenType : of type >
FormField "1" o-- "1" TokenType : of type >
FormDialog "1" -> "1" Action : generates
FormDialog <|-- AlarmFormDialog
Action <|-- AlarmAction
AlarmFormDialog "1" .> "1" AlarmAction

@enduml
