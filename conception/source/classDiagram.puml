@startuml

class RestServer {
    +DialogManager dm
    +handleRequest(HttpRequest req): HttpResponse
}
class DialogManager {
    +createDialog(): String
    +sayInDialog(int id, String text): String
    +confirmActionIn(int id): Action
    +invalidateAction(int id): String 
}
abstract class FormDialog <<Resource>> {
    +{static} int nextid
    +int id
    +List<FormField> form
    +addStep(String text): void
    +{abstract} generateAction(): Action
    +answer(): String
    -isFilled(): boolean
}
class FormField {
    +TokenType type
    +String name
    +String value
    +fill(Token token): void
    +isEmpty(): boolean
}
class AlarmFormDialog {
    +generateAction(): AlarmAction
}
abstract class Action
class AlarmAction
class Tokenizer <<(S, orange) Singleton>> {
    +tokenize(String text): List<Token>
}
class Token {
    +TokenType type
    +String value
}
enum TokenType

hide TokenType methods

RestServer *-- DialogManager
DialogManager *-- FormDialog : maintient >
FormDialog -left-> Tokenizer : utilise
FormDialog *-- FormField : doit remplir >
Tokenizer --> Token : détermine
FormDialog --> Token : est rempli\navec
Token o- TokenType : est\nde type >
FormField o-- TokenType : est\nde type >
FormDialog .> Action : génère
FormDialog <|-- AlarmFormDialog
Action <|-- AlarmAction
AlarmFormDialog .> AlarmAction

@enduml
